--DROP TABLE IF EXISTS "user_friend";
--DROP TABLE IF EXISTS "film_likes";
--DROP TABLE IF EXISTS "user";
--DROP TABLE IF EXISTS "film_genre";
--DROP TABLE IF EXISTS "film";
--DROP TABLE IF EXISTS MPA;
--DROP TABLE IF EXISTS "status_type";
--DROP TABLE IF EXISTS "genre";

CREATE TABLE IF NOT EXISTS "film" (
  "id" integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar(255) NOT NULL,
  "description" text NULL,
  "release_date" date NOT NULL,
  "duration" integer NOT NULL,
  "MPA_id" integer NOT NULL,
  "created_at" timestamp NOT NULL DEFAULT(CURRENT_TIMESTAMP())
);

CREATE TABLE IF NOT EXISTS MPA (
  "id" integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar(10) NOT NULL,
  "description" text NULL,
  "created_at" timestamp NOT NULL DEFAULT(CURRENT_TIMESTAMP())
);

CREATE TABLE IF NOT EXISTS "genre" (
  "id" integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "code" varchar(60) NOT NULL,
  "name" varchar(60) NOT NULL,
  "description" text NULL,
  "created_at" timestamp NOT NULL DEFAULT(CURRENT_TIMESTAMP())
);

CREATE TABLE IF NOT EXISTS "film_genre" (
  "id" integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "film_id" integer NOT NULL,
  "genre_id" integer NOT NULL,
  "created_at" timestamp NOT NULL DEFAULT(CURRENT_TIMESTAMP())
);

CREATE TABLE IF NOT EXISTS "film_likes" (
  "id" integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "film_id" integer NOT NULL,
  "user_id" integer NOT NULL,
  "created_at" timestamp NOT NULL DEFAULT(CURRENT_TIMESTAMP())
);

CREATE TABLE IF NOT EXISTS "user" (
  "id" integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "email" varchar(60) NOT NULL,
  "login" varchar(30) NOT NULL,
  "name" varchar(60) NULL,
  "birthday" date NOT NULL,
  "created_at" timestamp NOT NULL DEFAULT(CURRENT_TIMESTAMP())
);

CREATE TABLE IF NOT EXISTS "user_friend" (
  "id" integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "user_from_id" integer NOT NULL,
  "user_to_id" integer NOT NULL,
  "status_id" integer NOT NULL,
  "created_at" timestamp NOT NULL DEFAULT(CURRENT_TIMESTAMP())
);

CREATE TABLE IF NOT EXISTS "status_type" (
  "id" integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "code" varchar(30) NOT NULL,
  "name" varchar(60) NOT NULL,
  "description" text NULL,
  "created_at" timestamp NOT NULL DEFAULT(CURRENT_TIMESTAMP())
);

CREATE TABLE IF NOT EXISTS "director" (
    "id" integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "name" VARCHAR(255) NOT NULL,
    "created_at" timestamp NOT NULL DEFAULT(CURRENT_TIMESTAMP())
);

CREATE TABLE IF NOT EXISTS "film_director" (
    "id" integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "film_id" INTEGER NOT NULL,
    "director_id" INTEGER NOT NULL,
    "created_at" timestamp NOT NULL DEFAULT(CURRENT_TIMESTAMP())
);

ALTER TABLE "film" ADD IF NOT EXISTS FOREIGN KEY ("MPA_id") REFERENCES "MPA" ("id");

ALTER TABLE "film_genre" ADD IF NOT EXISTS FOREIGN KEY ("film_id") REFERENCES "film" ("id") ON DELETE CASCADE;;

ALTER TABLE "film_genre" ADD IF NOT EXISTS  FOREIGN KEY ("genre_id") REFERENCES "genre" ("id");

ALTER TABLE "film_likes" ADD IF NOT EXISTS FOREIGN KEY ("film_id") REFERENCES "film" ("id") ON DELETE CASCADE;;

ALTER TABLE "film_likes" ADD IF NOT EXISTS FOREIGN KEY ("user_id") REFERENCES "user" ("id") ON DELETE CASCADE;;

ALTER TABLE "user_friend" ADD IF NOT EXISTS FOREIGN KEY ("user_from_id") REFERENCES "user" ("id") ON DELETE CASCADE;;

ALTER TABLE "user_friend" ADD IF NOT EXISTS FOREIGN KEY ("user_to_id") REFERENCES "user" ("id") ON DELETE CASCADE;;

ALTER TABLE "user_friend" ADD IF NOT EXISTS FOREIGN KEY ("status_id") REFERENCES "status_type" ("id");

ALTER TABLE "film_director" ADD IF NOT EXISTS FOREIGN KEY ("film_id") REFERENCES "film" ("id") ON DELETE CASCADE;;

ALTER TABLE "film_director" ADD IF NOT EXISTS FOREIGN KEY ("director_id") REFERENCES "director" ("id") ON DELETE CASCADE;